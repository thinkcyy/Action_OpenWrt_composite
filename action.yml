name: 'Action_zhKong_composite'
description: 'Action'
inputs:
  ROUTER_MODEL:  
    description: 'MODEL'
    required: true
    default: 'AX6'
  COMPILE_CONFIG: 
    description: 'CONFIG'
    required: true
    default: 'AX6-20240501-full-NSS'
  IMAGEBUILDER: 
    description: 'IMAGEBUILDER'
    required: false
    default: 'n'
  FILES_CONFIG: 
    description: 
    required: false
    default: 'public'
  OP_REPO: 
    description: 
    required: false
    default: 'AgustinLorenzo/openwrt'    
  REPO_BRANCH: 
    description: 
    required: false
    default: 'main' 
  REPO_DEPTH: 
    description: 
    required: false
    default: 'all'
  REPO_COMMIT: 
    description: 
    required: false
    default: 'latest' 
  REPO_TAG: 
    description: 
    required: false
    default: 'none'
  REPO_TYPE: 
    description: 
    required: false
    default: 'zhKong'     
  MATCH_FEED_HASH: 
    description: 
    required: false
    default: 'n'
  ACTION_DATE: 
    description: 
    required: false
    default: 'latest'    
  DEFAULT_FEEDS: 
    description: 
    required: false
    default: 'n' 
  CUSTOM_FEEDS_SH: 
    description: 
    required: false
    default: 'n' 
  FEEDS_DATE: 
    description: 
    required: false
    default: 'latest'  
  EXTRA_FEEDS: 
    description: 
    required: false
    default: 'n'
runs:
  using: "composite"
  steps:
    - name: Compile      
      shell: bash
      env:
        ROUTER_MODEL: ${{ inputs.ROUTER_MODEL }}   
        COMPILE_CONFIG: ${{ inputs.COMPILE_CONFIG }} 
        FILES_CONFIG: ${{ inputs.FILES_CONFIG }} 
        REPO_TYPE: ${{ inputs.REPO_TYPE }}
        IMAGEBUILDER: n
        ACTION_DATE: ${{ inputs.ACTION_DATE }}
        FEEDS_DATE: ${{ inputs.FEEDS_DATE }}
      run:  |                    
          echo '当前执行步骤：1-下载Action仓库'
          
          git clone $([[ ${{ inputs.ACTION_DATE }} = 'latest' ]] && echo --depth 1 || echo ) https://github.com/thinkcyy/OpenWRT-Action runner_root           
          cd runner_root
          if [ "${{ inputs.ACTION_DATE }}" != 'latest' ] ; then   
            echo "-已选择锁定Action仓库日期"                        
            if [  ${#ACTION_DATE} = '25' ] ; then
              git checkout $(git rev-list -n 1 --all --before=${{ inputs.ACTION_DATE }})       
            else
              git checkout ${{ inputs.ACTION_DATE }}
            fi            
          fi          

          echo '当前执行步骤：2-下载OpenWrt源码仓库'
          echo "https://github.com/${{ inputs.OP_REPO }} -b ${{ inputs.REPO_BRANCH }} "
          git clone $([[ ${{ inputs.REPO_COMMIT }} = 'latest' ]] && echo --depth 1 || echo ) https://github.com/${{ inputs.OP_REPO }} -b ${{ inputs.REPO_BRANCH }} --single-branch ./openwrt
          cd openwrt
          $([[ ${{ inputs.REPO_COMMIT }} != 'latest' ]] && echo git checkout ${{ inputs.REPO_COMMIT }} || echo )
          COMMITHASH=$(git rev-parse --short HEAD)
          echo $COMMITHASH
          #REV_BRANCH="$(git rev-parse --abbrev-ref HEAD)" 
          
          #默认设置
          mkdir -p ./package/thinkcy
          cp -vr ../thinkcy-settings ./package/thinkcy       
          
          echo '当前执行步骤：3-更新menuconfig文件'          
          chmod +x ../$REPO_TYPE/scripts/*.sh
          cp -vr ../$REPO_TYPE/config/${{ inputs.COMPILE_CONFIG }}.config ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
          
          echo '当前执行步骤：4-检查ImageBuilder'    
          if [ "${{ inputs.IMAGEBUILDER }}" = 'y' ] ; then
              echo "-已选择编译IMAGEBUILDER"
              echo "-已选择编译IMAGEBUILDER"
              echo "IMAGEBUILDER=y" >> $GITHUB_ENV
              sed -i '/CONFIG_IB/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              sed -i '/CONFIG_IB_STANDALONE/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              sed -i '/CONFIG_SDK/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              sed -i '/CONFIG_MAKE_TOOLCHAIN/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              sed -i '/ALL_KMODS/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config              
              sed -i '/CONFIG_BUILD_NLS/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config   
              echo CONFIG_IB=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              echo CONFIG_IB_STANDALONE=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              echo CONFIG_SDK=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              echo CONFIG_MAKE_TOOLCHAIN=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              echo CONFIG_ALL_KMODS=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              echo CONFIG_BUILD_NLS=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
          fi          
          
          echo '当前执行步骤：5-调整默认feed源'  
          if [ "${{ inputs.DEFAULT_FEEDS }}" != 'n' ] ; then
            cp ../$REPO_TYPE/scripts/${{ inputs.DEFAULT_FEEDS }} ./feeds.conf.default
            echo "-已选择替换自带feeds源"
          fi          
          echo "-添加额外feeds源"
          if [ "${{ inputs.EXTRA_FEEDS }}" != 'n' ] ; then
            ../$REPO_TYPE/scripts/${{ inputs.EXTRA_FEEDS }}.sh
          fi
          echo "-删除未启用feeds源"
          sed -i '/^#/d' ./feeds.conf.default
          sed -i '/#/d' ./feeds.conf.default
          
          echo "-feeds.conf.default内容"
          cat feeds.conf.default                 
                    
          echo '当前执行步骤：6-生成feeds.conf'
          if [ "${{ inputs.MATCH_FEED_HASH }}" = 'y' ] ; then   
            echo "-已选择根据源码日期锁定feeds日期"
            ../scripts/select_feed_commit.sh
          else
            if [ "${{ inputs.FEEDS_DATE }}" != 'latest' ] ; then   
                echo "-已选择单独锁定feeds日期"
                ../scripts/select_feed_commit.sh ${{ inputs.FEEDS_DATE }}
            else
                cp ./feeds.conf.default ./feeds.conf
            fi   
          fi
          
          echo "-feeds.conf内容"
          cat feeds.conf
                      
          echo '当前执行步骤：7-执行custom_feeds.sh'
          if [ "${{ inputs.CUSTOM_FEEDS_SH }}" != 'n' ] ; then   
            echo "-已选择${{ inputs.CUSTOM_FEEDS_SH }}"
            echo "${{ inputs.CUSTOM_FEEDS_SH }}内容"
            cat ../$REPO_TYPE/scripts/${{ inputs.CUSTOM_FEEDS_SH }}.sh
            ../$REPO_TYPE/scripts/${{ inputs.CUSTOM_FEEDS_SH }}.sh
          else 
            echo '默认custom_feeds.sh内容'
            cat ../$REPO_TYPE/scripts/custom_feeds.sh          
            ../$REPO_TYPE/scripts/custom_feeds.sh            
          fi
                             
          echo '当前执行步骤：8-修改版本号'
          #删除lean的默认设置
          rm -rf ./package/lean/default-settings/
          if [ "${{ env.IMAGEBUILDER }}" = 'y' ] ; then
               sed -i "s|REVISION_tobeupdated|ImageBuilder-${{ inputs.REPO_BRANCH }}-$COMMITHASH-$(date +%Y%m%d)|g" ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings 
               sed -i "s|DESCRIPTION_tobeupdated|ImageBuilder-${{ inputs.REPO_BRANCH }}-$COMMITHASH-$(date +%Y%m%d)|g" ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings 
          else          
               sed -i "s|REVISION_tobeupdated|${{ inputs.COMPILE_CONFIG }}-${{ inputs.FILES_CONFIG }}-${{ inputs.REPO_BRANCH }}-$COMMITHASH-$(date +%Y%m%d)|g" ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings 
               sed -i "s|DESCRIPTION_tobeupdated|${{ inputs.COMPILE_CONFIG }}-${{ inputs.FILES_CONFIG }}-${{ inputs.REPO_BRANCH }}-$COMMITHASH-$(date +%Y%m%d)|g" ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings 
          fi
          cat ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings
          
          echo '当前执行步骤：9-添加自定义配置files'
          if [ "${{ inputs.FILES_CONFIG }}" != 'public' ] ; then
             # 忽略错误
             set +e
             echo "files版本为${{ inputs.FILES_CONFIG }}"             
             echo "-正在复制common"
             cp -vr ../../openwrt-config/common/files ./
             echo "-正在复制common-${{ env.FILES_CONFIG }}"
             cp -vr ../../openwrt-config/common/${{ inputs.FILES_CONFIG }}/files ./
             echo "-正在复制${{ env.ROUTER_MODEL }}-common"
             cp -vr ../../openwrt-config/${{ inputs.ROUTER_MODEL }}/common/files ./
             echo "-正在复制${{ env.ROUTER_MODEL }}-${{ env.FILES_CONFIG }}"
             cp -vr ../../openwrt-config/${{ inputs.ROUTER_MODEL }}/${{ inputs.FILES_CONFIG }}/files ./             
             echo '-追加wg客户端'
             cat ../../openwrt-config//common/network-wg0-peers >> ./files/etc/config/network
             echo '-追dhcp客户端'
             sed -i "s|subnet|192.168.${FILES_CONFIG}|g" ../../openwrt-config/common/dhcp-host
             cat ../../openwrt-config/common/dhcp-host >> ./files/etc/config/dhcp
             
             echo '-处理文件权限'
             chmod +x ./files/etc/tinc/tincvpn/tinc-up
             chmod +x ./files/etc/tinc/tincvpn/tinc-down
             chmod 400 ./files/etc/dropbear/authorized_keys
             echo '-files文件总览：'
             tree ./files             

             cat ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings | grep DISTRIB_REVISION     
             cat ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings | grep DESCRIPTION 
             #echo '-向后调整tinc服务启动次序'             
             #sed -i 's|START=42|START=99|g' ./feeds/packages/net/tinc/files/tinc.init
             # 遇错退出
             set -e
          else
             echo '-当前为public版本，跳过'
          fi                       
          
          echo '当前执行步骤：10-编译'          
          echo '当前执行步骤：10.1-下载'
          make download -j$(nproc)
          echo '当前执行步骤：10.2-编译'
          IGNORE_ERRORS=1  make -j$(nproc) || make -j1 V=s
          # make V=s; while [ $(($?)) -ne 0 ]; do make V=s; done
          
          echo '当前执行步骤：11-打标'
          if [ "${{ inputs.FILES_CONFIG }}" != 'public' ] ; then
             tag_name=${{ inputs.COMPILE_CONFIG }}-${{ inputs.FILES_CONFIG }}
          else
             tag_name=${{ inputs.COMPILE_CONFIG }}
          fi
          
          
          tag_name=$tag_name-$(echo ${{ inputs.OP_REPO }} | sed 's|\/|.|').${{ inputs.REPO_BRANCH }}.$COMMITHASH-$(date +%Y%m%d-%H%M)
          
          echo $tag_name
          echo "TAG_NAME=$tag_name" >> $GITHUB_ENV  

    - name: Organize files      
      shell: bash
      run: |                             
          set +e
          echo '当前执行步骤：12-组织产出文件'          
          cd ./runner_root
          echo "targets产出文件："
          tree  ./openwrt/bin/targets/
          rm -rf ./artifact/
          mkdir -p ./artifact/

          echo '当前执行步骤：12.1-组织配置文件：'
          cp -vrf $(find ./openwrt/bin/targets/ -type f -name "*.buildinfo") ./artifact/
          cp -vrf $(find ./openwrt/bin/targets/ -type f -name "*.manifest") ./artifact/
          cp -vr ./openwrt/.config ./artifact/defconfig-${{ env.TAG_NAME }}.config

          echo '当前执行步骤：12.2-组织bin文件：'
          echo '-sysupgrade文件：'
          cp -vrf $(find ./openwrt/bin/targets/ -type f -name "*sysupgrade*") ./artifact/
          rename 's/sysupgrade.bin/sysupgrade-${{ env.TAG_NAME }}.bin/' *
          
          echo '当前执行步骤：12.3-组织tar文件：'
          if [ "${{ env.IMAGEBUILDER }}" = 'y' ] ; then             
             cp -vrf $(find ./openwrt/bin/targets/ -type f -name "*imagebuilder*") ./artifact/             
             cd ./artifact/
             rename 's/.tar.xz/-${{ env.TAG_NAME }}.tar.xz/' *
             rename 's/.tar.zst/-${{ env.TAG_NAME }}.tar.zst/' *
             tag_name=Imagebuilder-${{ env.TAG_NAME }} 
             echo $tag_name
             echo "TAG_NAME=$tag_name" >> $GITHUB_ENV
          fi                                        

          echo '-产出文件总览：'
          ls -hl 
          set -e
          
    - name: Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: ${{ inputs.REPO_TYPE }}-${{ env.TAG_NAME }}
        path: ./runner_root/artifact/
        
    - name: Addtional bin for release      
      shell: bash
      run: |          
          echo '当前执行步骤：13-添加额外发布文件'    
          if [ "${{ env.IMAGEBUILDER }}" = 'y' ] ; then
             cd ./runner_root
             cp -vrf $(find ./openwrt/bin/targets/ -type f -name "*sdk*") ./artifact/
             cp -vrf $(find ./openwrt/bin/targets/ -type f -name "*toolchain*") ./artifact/
          fi
