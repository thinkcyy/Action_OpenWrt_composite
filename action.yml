name: 'Action_OpenWrt_composite'
description: 'Action'
inputs:
  ROUTER_MODEL:  
    description: 'MODEL'
    required: true
    default: 'AX6'
  COMPILE_CONFIG_BASE: 
    description: 'CONFIG'
    required: false
    default: 'n'
  COMPILE_CONFIG_DIFF: 
    description: 'CONFIG'
    required: false
    default: 'n'
  COMPILE_CONFIG: 
    description: 'CONFIG'
    required: false
    default: 'n'
  IMAGEBUILDER: 
    description: 'IMAGEBUILDER'
    required: false
    default: 'n'
  FILES_CONFIG: 
    description: 
    required: false
    default: 'public'
  OP_REPO: 
    description: 
    required: false
    default: 'AgustinLorenzo/openwrt'    
  REPO_BRANCH: 
    description: 
    required: false
    default: 'n' 
  REPO_DEPTH: 
    description: 
    required: false
    default: 'all'
  REPO_DATE: 
    description: 
    required: false
    default: 'latest' 
  REPO_TYPE: 
    description: 
    required: false
    default: 'zhKong'     
  MATCH_FEED_HASH: 
    description: 
    required: false
    default: 'n'
  ACTION_DATE: 
    description: 
    required: false
    default: 'latest'    
  DEFAULT_FEEDS: 
    description: 
    required: false
    default: 'n' 
  CUSTOM_FEEDS_SH: 
    description: 
    required: false
    default: 'n' 
  FEEDS_DATE: 
    description: 
    required: false
    default: 'latest'  
  EXTRA_FEEDS: 
    description: 
    required: false
    default: 'n'
runs:
  using: "composite"
  steps:
    - name: Compile      
      shell: bash
      env:
        ROUTER_MODEL: ${{ inputs.ROUTER_MODEL }}   
        COMPILE_CONFIG: ${{ inputs.COMPILE_CONFIG }} 
        FILES_CONFIG: ${{ inputs.FILES_CONFIG }} 
        REPO_TYPE: ${{ inputs.REPO_TYPE }}
        REPO_DATE: ${{ inputs.REPO_DATE }}
        IMAGEBUILDER: ${{ inputs.IMAGEBUILDER }}
        ACTION_DATE: ${{ inputs.ACTION_DATE }}
        FEEDS_DATE: ${{ inputs.FEEDS_DATE }}
      run:  |
          echo "ROUTER_MODEL=${{ inputs.ROUTER_MODEL }}" >> $GITHUB_ENV
          echo "COMPILE_CONFIG=${{ inputs.COMPILE_CONFIG }}" >> $GITHUB_ENV
          echo "IMAGEBUILDER=${{ inputs.IMAGEBUILDER }}" >> $GITHUB_ENV
          echo "FILES_CONFIG=${{ inputs.FILES_CONFIG }}" >> $GITHUB_ENV
          echo "OP_REPO=${{ inputs.OP_REPO }}" >> $GITHUB_ENV
          echo "REPO_BRANCH=${{ inputs.REPO_BRANCH }}" >> $GITHUB_ENV
          echo "REPO_DEPTH=${{ inputs.REPO_DEPTH }}" >> $GITHUB_ENV
          echo "REPO_DATE=${{ inputs.REPO_DATE }}" >> $GITHUB_ENV
          echo "REPO_TYPE=${{ inputs.REPO_TYPE }}" >> $GITHUB_ENV
          echo "MATCH_FEED_HASH=${{ inputs.MATCH_FEED_HASH }}" >> $GITHUB_ENV
          echo "ACTION_DATE=${{ inputs.ACTION_DATE }}" >> $GITHUB_ENV
          echo "DEFAULT_FEEDS=${{ inputs.DEFAULT_FEEDS }}" >> $GITHUB_ENV
          echo "CUSTOM_FEEDS_SH=${{ inputs.CUSTOM_FEEDS_SH }}" >> $GITHUB_ENV
          echo "FEEDS_DATE=${{ inputs.FEEDS_DATE }}" >> $GITHUB_ENV
          echo "EXTRA_FEEDS=${{ inputs.EXTRA_FEEDS }}" >> $GITHUB_ENV
          echo "COMPILE_CONFIG_BASE=${{ inputs.COMPILE_CONFIG_BASE }}" >> $GITHUB_ENV
          echo "COMPILE_CONFIG_DIFF=${{ inputs.COMPILE_CONFIG_DIFF }}" >> $GITHUB_ENV
          
          #全局设置log date格式
          git config --global log.date iso-strict-local
          
          echo '当前执行步骤：1-下载Action仓库'          
          git clone $([[ ${{ inputs.ACTION_DATE }} = 'latest' ]] && echo --depth 1 || echo ) https://github.com/thinkcyy/OpenWRT-Action runner_root           
          cd runner_root
          if [ "${{ inputs.ACTION_DATE }}" != 'latest' ] ; then   
            echo "-已选择锁定Action仓库日期"                        
            if [  ${#ACTION_DATE} = '25' ] ; then
              git checkout $(git rev-list -n 1 --all --before=${{ inputs.ACTION_DATE }})       
            else
              git checkout ${{ inputs.ACTION_DATE }}
            fi            
          fi          

          echo '当前执行步骤：2-下载OpenWrt源码仓库'
          #git clone $([[ ${{ inputs.REPO_DATE }} = 'latest' ]] && echo --depth 1 || echo ) https://github.com/${{ inputs.OP_REPO }} -b ${{ inputs.REPO_BRANCH }} --single-branch ./openwrt
          #git clone https://github.com/${{ inputs.OP_REPO }} $([[ ${{ inputs.REPO_DATE }} != 'latest' ]] && echo -b ${{ inputs.REPO_BRANCH }} --single-branch|| echo )  ./openwrt

          if [ "${{ inputs.REPO_DATE }}" != 'latest' ] ; then   
            echo "-已选择锁定OpenWrt源码仓库日期"                        
            if [  ${#REPO_DATE} = '25' ] ; then
              echo "git clone https://github.com/${{ inputs.OP_REPO }} $([[ ${{ inputs.REPO_BRANCH }} != 'n' ]] && echo "-b ${{ inputs.REPO_BRANCH }} --single-branch")"
              git clone https://github.com/${{ inputs.OP_REPO }} $([[ ${{ inputs.REPO_BRANCH }} != 'n' ]] && echo "-b ${{ inputs.REPO_BRANCH }} --single-branch")  ./openwrt
              cd openwrt
              git checkout $(git rev-list -n 1 --date=rfc --before=${{ inputs.REPO_DATE }} ${{ inputs.REPO_BRANCH }})       
            else
              git clone https://github.com/${{ inputs.OP_REPO }}  ./openwrt          
              cd openwrt
              git checkout ${{ inputs.REPO_DATE }}
            fi            
          else
            echo "-已选择使用最新版本"
            #echo "git clone --depth 1 https://github.com/${{ inputs.OP_REPO }}  $([[ ${{ inputs.REPO_BRANCH }} != 'n' ]] && echo "-b ${{ inputs.REPO_BRANCH }} --single-branch")" 
            git clone --depth 1 https://github.com/${{ inputs.OP_REPO }}  $([[ ${{ inputs.REPO_BRANCH }} != 'n' ]] && echo -b "${{ inputs.REPO_BRANCH }}" --single-branch)  ./openwrt
            cd openwrt
          fi 

          
          COMMITHASH=$(git rev-parse --short HEAD)
          echo "COMMITHASH=$COMMITHASH" >> $GITHUB_ENV 

          echo "-源码$COMMITHASH日期为："
          git show  --pretty=fuller $COMMITHASH | grep CommitDate

          
          #默认设置
          mkdir -p ./package/thinkcy
          cp -vr ../thinkcy-settings ./package/thinkcy       
          
          echo '当前执行步骤：3-更新menuconfig文件'          
          chmod +x ../$REPO_TYPE/scripts/*.sh
          [[ ${{ inputs.COMPILE_CONFIG_BASE }} != 'n' ]] && echo "基础配置COMPILE_CONFIG_BASE为：${{ inputs.COMPILE_CONFIG_BASE }}" && cat ../$REPO_TYPE/config/${{ inputs.COMPILE_CONFIG_BASE }}.config >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config 
          [[ ${{ inputs.COMPILE_CONFIG_DIFF }} != 'n' ]] && echo "追加配置COMPILE_CONFIG_DIFF为：${{ inputs.COMPILE_CONFIG_DIFF }}" && cat ../$REPO_TYPE/config/${{ inputs.COMPILE_CONFIG_DIFF }}.config >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config 
          [[ ${{ inputs.COMPILE_CONFIG }} != 'n' ]] && echo "其他配置COMPILE_CONFIG为：${{ inputs.COMPILE_CONFIG }}" && cat ../$REPO_TYPE/config/${{ inputs.COMPILE_CONFIG }}.config >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
          
          echo '当前执行步骤：4-检查ImageBuilder'    
          if [ "${{ inputs.IMAGEBUILDER }}" = 'y' ] ; then
              echo "-已选择编译IMAGEBUILDER"
              echo "IMAGEBUILDER=y" >> $GITHUB_ENV
              sed -i '/CONFIG_IB/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              sed -i '/CONFIG_IB_STANDALONE/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              sed -i '/CONFIG_SDK/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              sed -i '/CONFIG_MAKE_TOOLCHAIN/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              sed -i '/ALL_KMODS/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config              
              sed -i '/CONFIG_BUILD_NLS/d' ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config   
              echo CONFIG_IB=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              echo CONFIG_IB_STANDALONE=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              echo CONFIG_SDK=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              echo CONFIG_MAKE_TOOLCHAIN=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              echo CONFIG_ALL_KMODS=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config
              echo CONFIG_BUILD_NLS=y >> ../$REPO_TYPE/config/config-${{ inputs.ROUTER_MODEL }}.config              
          fi          
          
          echo '当前执行步骤：5-调整默认feed源'  
          if [ "${{ inputs.DEFAULT_FEEDS }}" != 'n' ] ; then
            cp ../$REPO_TYPE/scripts/${{ inputs.DEFAULT_FEEDS }} ./feeds.conf.default
            echo "-已选择替换自带feeds源"
          fi          
          echo "-添加额外feeds源"
          if [ "${{ inputs.EXTRA_FEEDS }}" != 'n' ] ; then
            ../$REPO_TYPE/scripts/${{ inputs.EXTRA_FEEDS }}.sh
          fi
          
          echo "-feeds.conf.default内容"
          cat feeds.conf.default  
          
          echo "-删除未启用feeds源"
          sed -i '/^#/d' ./feeds.conf.default
          sed -i '/#/d' ./feeds.conf.default
                    
          echo '当前执行步骤：6-生成feeds.conf'
          if [ "${{ inputs.MATCH_FEED_HASH }}" = 'y' ] ; then   
            echo "-已选择根据源码日期锁定feeds日期"
            ../scripts/select_feed_commit.sh
          else
            if [ "${{ inputs.FEEDS_DATE }}" != 'latest' ] ; then   
                echo "-已选择单独锁定feeds日期"
                ../scripts/select_feed_commit.sh ${{ inputs.FEEDS_DATE }}
            else
                cp ./feeds.conf.default ./feeds.conf
            fi   
          fi
          
          echo "-feeds.conf内容"
          cat feeds.conf
                      
          echo '当前执行步骤：7-执行custom_feeds.sh'
          
          #../scripts/add_package_common.sh
          
          if [ "${{ inputs.CUSTOM_FEEDS_SH }}" != 'n' ] ; then   
            echo "-已选择${{ inputs.CUSTOM_FEEDS_SH }}"
            echo "${{ inputs.CUSTOM_FEEDS_SH }}内容"
            cat ../$REPO_TYPE/scripts/${{ inputs.CUSTOM_FEEDS_SH }}.sh
            ../$REPO_TYPE/scripts/${{ inputs.CUSTOM_FEEDS_SH }}.sh
          else 
            echo '默认custom_feeds.sh内容'
            cat ../$REPO_TYPE/scripts/custom_feeds.sh          
            ../$REPO_TYPE/scripts/custom_feeds.sh            
          fi
                             
          echo '当前执行步骤：8-修改版本号'
          #删除lean的默认设置
          #rm -rf ./package/lean/default-settings/  
          
          REPO_TAG=$(echo ${{ inputs.OP_REPO }} | sed 's|\/|.|')$([[ ${{ inputs.REPO_BRANCH }} != 'n' ]] && echo .${{ inputs.REPO_BRANCH }}||echo).$COMMITHASH
          echo "REPO_TAG为：$REPO_TAG"
          echo "REPO_TAG=$REPO_TAG" >> $GITHUB_ENV

          if [ "${{ inputs.COMPILE_CONFIG }}" != 'n' ] ; then
             COMPILE_CONFIG_TAG=${{ inputs.COMPILE_CONFIG }}
          else
             if [ "${{ inputs.COMPILE_CONFIG_DIFF }}" != 'n' ] ; then
                COMPILE_CONFIG_TAG=${{ inputs.COMPILE_CONFIG }}
             else
                COMPILE_CONFIG_TAG=${{ inputs.COMPILE_BASE }}
             fi
          fi
          echo "COMPILE_CONFIG_TAG为：$COMPILE_CONFIG_TAG"
          echo "COMPILE_CONFIG_TAG=$COMPILE_CONFIG_TAG" >> $GITHUB_ENV
          
          DATE_TAG=$(date +%Y%m%d)
          
          if [ "${{ env.IMAGEBUILDER }}" = 'y' ] ; then
               #sed -i "s|REVISION_tobeupdated|${REPO_TAG}-${COMPILE_CONFIG_TAG}-ImageBuilder-${DATE_TAG}|g" ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings 
               sed -i "s|DESCRIPTION_tobeupdated|${REPO_TAG}-${COMPILE_CONFIG_TAG}-ImageBuilder-${DATE_TAG}|g" ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings 
          else          
               #sed -i "s|REVISION_tobeupdated|${REPO_TAG}-${COMPILE_CONFIG_TAG}-${{ inputs.FILES_CONFIG }}-${DATE_TAG}|g" ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings 
               sed -i "s|DESCRIPTION_tobeupdated|${REPO_TAG}-${COMPILE_CONFIG_TAG}-${{ inputs.FILES_CONFIG }}-${DATE_TAG}|g" ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings 
          fi
          cat ./package/thinkcy/thinkcy-settings/files/99-thinkcy-settings
          
          echo '当前执行步骤：9-添加自定义配置files'
          if [ "${{ inputs.FILES_CONFIG }}" != 'public' ] ; then
             # 忽略错误
             set +e
             echo "files版本为${{ inputs.FILES_CONFIG }}"             
             echo "-正在复制common"
             cp -vr ../../openwrt-config/common/files ./
             echo "-正在复制common-${{ env.FILES_CONFIG }}"
             cp -vr ../../openwrt-config/common/${{ inputs.FILES_CONFIG }}/files ./
             echo "-正在复制${{ env.ROUTER_MODEL }}-common"
             cp -vr ../../openwrt-config/${{ inputs.ROUTER_MODEL }}/common/files ./
             echo "-正在复制${{ env.ROUTER_MODEL }}-${{ env.FILES_CONFIG }}"
             cp -vr ../../openwrt-config/${{ inputs.ROUTER_MODEL }}/${{ inputs.FILES_CONFIG }}/files ./             
             echo '-追加wg客户端'
             cat ../../openwrt-config//common/network-wg0-peers >> ./files/etc/config/network
             echo '-追dhcp客户端'
             sed -i "s|subnet|192.168.${FILES_CONFIG}|g" ../../openwrt-config/common/dhcp-host
             cat ../../openwrt-config/common/dhcp-host >> ./files/etc/config/dhcp
             
             echo '-处理文件权限'
             chmod +x ./files/etc/tinc/tincvpn/tinc-up
             chmod +x ./files/etc/tinc/tincvpn/tinc-down
             chmod 400 ./files/etc/dropbear/authorized_keys
             echo '-files文件总览：'
             tree ./files             

             # 遇错退出
             set -e
          else
             echo '-当前为public版本，跳过'
          fi
